## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs to manage the user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the users.'
      description: 'Gets a list of users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      pageSize:
        name: pageSize
        description: 'Size per page. Default to 20.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'Page to view'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      pageSize: 11
      page: 17
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":8,"name":"Miss Brooke Rosenbaum","email":"marcelle62@example.net","password":"$2y$12$RO2luRHiKfO8UwgqTnkU5ObknrJisqKcmu6E8UhMKGQk6OhbiKvUS","created_at":"2024-10-18 18:22:29","updated_at":"2024-10-18 18:22:29"},{"id":9,"name":"Casper Koepp","email":"kariane79@example.org","password":"$2y$12$RO2luRHiKfO8UwgqTnkU5ObknrJisqKcmu6E8UhMKGQk6OhbiKvUS","created_at":"2024-10-18 18:22:29","updated_at":"2024-10-18 18:22:29"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: true
        example: doe@doe.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: doe@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":10,"name":"Misty Hoppe","email":"bahringer.alyce@example.org","password":"$2y$12$RO2luRHiKfO8UwgqTnkU5ObknrJisqKcmu6E8UhMKGQk6OhbiKvUS","created_at":"2024-10-18 18:22:29","updated_at":"2024-10-18 18:22:29"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified users.'
      description: 'Gets a specified user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'user ID'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"name":"Amir Marvin","email":"allene76@example.org","password":"$2y$12$RO2luRHiKfO8UwgqTnkU5ObknrJisqKcmu6E8UhMKGQk6OhbiKvUS","created_at":"2024-10-18 18:22:29","updated_at":"2024-10-18 18:22:29"},{"id":12,"name":"Clark Grant","email":"huel.francisca@example.net","password":"$2y$12$RO2luRHiKfO8UwgqTnkU5ObknrJisqKcmu6E8UhMKGQk6OhbiKvUS","created_at":"2024-10-18 18:22:29","updated_at":"2024-10-18 18:22:29"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: false
        example: doe@doe.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: doe@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":13,"name":"Mrs. Bonnie Friesen PhD","email":"clovis.greenholt@example.net","password":"$2y$12$RO2luRHiKfO8UwgqTnkU5ObknrJisqKcmu6E8UhMKGQk6OhbiKvUS","created_at":"2024-10-18 18:22:29","updated_at":"2024-10-18 18:22:29"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": "User Deleted."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
